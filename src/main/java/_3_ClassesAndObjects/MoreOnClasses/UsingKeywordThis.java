package _3_ClassesAndObjects.MoreOnClasses;

/**
 * В пределах экземпляре метода или конструктора this єто ссылка
 * на текущий объект - объект, чей метод или конструктор вызывается.
 * Используя это, можно ссылаться на любой член текущего объекта
 * из метода экземпляра или конструктора.
 * ------------ Использование this с Полем --------------------
 * Наиболее распространенная причина использования этого ключевого
 * слова в том, что поле затеняется параметром метода или конструктора.
 * Например, класс Point был написан так:
 *
     * public class Point {
     *     public int x = 0;
     *     public int y = 0;
     *
     *     //constructor
     *     public Point(int a, int b) {
     *         x = a;
     *         y = b;
     *     }
     * }
 * но это можно было бы написать так:
     * public class Point {
     *     public int x = 0;
     *     public int y = 0;
     *
     *     //constructor
     *     public Point(int x, int y) {
     *         this.x = x;
     *         this.y = y;
     *     }
     * }
 * Каждый аргумент конструктора скрывает одно из полей объекта -
 * внутри конструктора x является локальной копией первого
 * аргумента конструктора. Для ссылки на поле Point x конструктор
 * должен использовать this.x.
 * ----------- Использование this с конструктором -----------------
 * Внутри конструктора также можно использовать ключевое слово
 * this для вызова другого конструктора в том же классе. Это
 * называется "явным вызовом конструктора". Вот еще один класс
 * Rectangle, реализация которого отличается от реализации
 * в разделе Objects.
     * public class Rectangle {
     *     private int x, y;
     *     private int width, height;
     *
     *     public Rectangle() {
     *         this(0, 0, 1, 1);
     *     }
     *     public Rectangle(int width, int height) {
     *         this(0, 0, width, height);
     *     }
     *     public Rectangle(int x, int y, int width, int height) {
     *         this.x = x;
     *         this.y = y;
     *         this.width = width;
     *         this.height = height;
     *     }
     *     ...
     * }
 * Этот класс содержит набор конструкторов. Каждый конструктор
 * инициализирует некоторые или все переменные-члены прямоугольника.
 * Конструкторы предоставляют значение по умолчанию для любой
 * переменной-члена, начальное значение которой не предоставляется
 * аргументом. Например, конструктор без аргументов создает
 * прямоугольник 1x1 в координатах 0,0. Конструктор с двумя
 * аргументами вызывает конструктор с четырьмя аргументами,
 * передавая ширину и высоту, но всегда используя координаты
 * 0,0. Как и прежде, компилятор определяет, какой конструктор
 * вызывать, основываясь на количестве и типе аргументов.
 *   (Если присутствует вызов другого конструктора, то он должен
 *   юыть первой строкой в конструкторе). Если присутствует,
 *   вызов другого конструктора должен быть первой строкой
 *   в конструкторе.
 */
public class UsingKeywordThis {
}
