package _3_ClassesAndObjects;

/**
 * Объявление класса именует класс и заключает тело класса
 * в фигурные скобки. Названию класса могут предшествовать
 * модификаторы. Тело класса содержит поля, методы и конструкторы
 * для класса. Класс использует поля для хранения информации
 * о состоянии и использует методы для реализации поведения.
 * Конструкторы, которые инициализируют новый экземпляр класса,
 * используют имя класса и выглядят как методы без возвращаемого
 * типа.
 * Вы управляете доступом к классам и членам таким же образом:
 * с помощью модификатора доступа, такого как public, в их объявлении.
 * Вы указываете переменную класса или метод класса, используя
 * ключевое слово static в объявлении члена. Член, который
 * не объявлен как статический, неявно является членом экземпляра.
 * Переменные класса являются общими для всех экземпляров
 * класса и могут быть доступны через имя класса, а также
 * ссылку на экземпляр. Экземпляры класса получают свою собственную
 * копию каждой переменной экземпляра, к которой нужно обращаться
 * через ссылку на экземпляр.
 * Вы создаете объект из класса, используя оператор new и
 * конструктор. Оператор new возвращает ссылку на созданный
 * объект. Вы можете назначить ссылку на переменную или использовать
 * ее напрямую.
 * На переменные экземпляра и методы, доступные для кода вне
 * класса, в котором они объявлены, можно ссылаться с помощью
 * компонентного имени.
 * Полное имя переменной экземпляра выглядит так:
 *      objectReference.variableName
 * Полное имя метода выглядит так:
 *      objectReference.methodName(argumentList)
 * или же:
 *      objectReference.methodName()
 * Сборщик мусора автоматически убирает неиспользуемые объекты.
 * Объект не используется, если в программе больше нет ссылок
 * на него. Вы можете явно удалить ссылку, установив переменную,
 * содержащую ссылку, на null.
 */
public class SmmaryClassObjects {
}
