package _3_ClassesAndObjects.Classes;

/**
 * Существует несколько видов переменных:
 *  - Переменные-члены в классе - они называются полями.
 *  - Переменные в методе или блоке кода - они называются
 *      локальными переменными.
 *  - Переменные в объявлениях методов - они называются параметрами.
 * Класс Bicycle использует следующие строки кода для определения
 * своих полей:
 *  - public int cadence;
 *  - public int gear;
 *  - public int speed;
 * Объявления полей состоят из трех компонентов по порядку:
 *  - ноль или более модификаторов, таких как public или
 *      private;
 *  - тип поля;
 *  - имя поля.
 * Ключевое слово public определяет эти поля как открытые
 * члены, доступные любому объекту, который может получить
 * доступ к классу.
 * --------------------------------------------------------------
 * Модификаторы доступа
 *   public modifier - поле доступно из всех классов.
 *   private modifier - поле доступно только внутри его
 *      собственного класса.
 * В духе инкапсуляции обычно делают поля частными. Это означает,
 * что к ним можно получить прямой доступ только из класса Bicycle.
 * Однако нам все еще нужен доступ к этим значениям. Это
 * можно сделать косвенным путем, добавив открытые методы,
 * которые получают значения полей для нас:
 */
class DeclarMemberVariables {
}
class Bicycle {

    private int cadence;
    private int gear;
    private int speed;

    public Bicycle(int startCadence, int startSpeed, int startGear) {
        gear = startGear;
        cadence = startCadence;
        speed = startSpeed;
    }
    public int getCadence() {
        return cadence;
    }
    public void setCadence(int newValue) {
        cadence = newValue;
    }
    public int getGear() {
        return gear;
    }
    public void setGear(int newValue) {
        gear = newValue;
    }
    public int getSpeed() {
        return speed;
    }
    public void applyBrake(int decrement) {
        speed -= decrement;
    }
    public void speedUp(int increment) {
        speed += increment;
    }
}
/**
 * -------------------Типы--------------------------------------
 * Все переменные должны иметь тип. Можно использовать примитивные
 * типы, такие как int, float, boolean и т.д. Или можно использовать
 * ссылочные типы, такие как строки, массивы или объекты.
 * ----------------Именование переменных------------------------
 * Все переменные, независимо от того, являются ли они полями,
 * локальными переменными или параметрами, следуют тем же
 * правилам и соглашениям об именах, которые были рассмотрены
 * в уроке Основы языка, Переменные - Именование.
 * Для имен методов и классов используются одни и те же правила
 * и соглашения об именах, за исключением того, что:
 *  - первая буква имени класса должна быть заглавной,
 *  - первое (или единственное) слово в имени метода должно
 *      быть глаголом.
 */





