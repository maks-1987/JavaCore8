package _2_LanguageBasic.ControlFlowStatem;

/**
 * Оператор if-then является самым базовым из всех операторов
 * потока управления. Он говорит программе выполнить определенный
 * фрагмент кода, только если конкретный тест оценивается
 * как true. Например, класс Bicycle может позволить тормозам
 * снизить скорость велосипеда, только если велосипед уже
 * находится в движении.
 *
 *  void applyBrakes() {
 *         // the "if" clause: bicycle must be moving
 *         if (isMoving){
 *             // the "then" clause: decrease current speed
 *             currentSpeed--;
 *         }
 *     }
 * Если этот тест оценивается как ложный (это означает, что
 * велосипед не находится в движении), управление переходит
 * к концу оператора if-then.
 * Кроме того, открывающая и закрывающая фигурные скобки являются
 * необязательными, при условии, что предложение «then» содержит
 * только один оператор:
 *
 *  void applyBrakes() {
 *     // same as above, but without braces
 *     if (isMoving)
 *         currentSpeed--;
 * }
 * Решать, когда опускать скобки, - дело личного вкуса. Отказ
 * от них может сделать код более хрупким. Если позднее к
 * предложению «then» будет добавлено второе утверждение,
 * распространенной ошибкой будет забыть добавить новые обязательные
 * скобки. Компилятор не может поймать такого рода ошибки;
 * вы просто получите неправильные результаты.
 *  Оператор if-then-else предоставляет вторичный путь выполнения,
 * когда предложение if оценивается как false. Можно использовать
 * оператор if-then-else в методе applyBrakes, чтобы предпринять
 * некоторые действия, если тормоза применяются, когда велосипед
 * не находится в движении. В этом случае необходимо просто
 * напечатать сообщение об ошибке, в котором говорится, что
 * велосипед уже остановился.
 *
 *  void applyBrakes() {
 *     if (isMoving) {
 *         currentSpeed--;
 *     } else {
 *         System.err.println("The bicycle has already stopped!");
 *     }
 * }
 * Следующая программа, IfElseDemo, назначает оценку на основе
 * значения оценки теста: A для оценки 90% или выше, B - для
 * оценки 80% или выше и так далее.
 */
public class If_then_Statements {
}
class IfElseDemo {
    public static void main(String[] args) {
        int testscore = 76;
        char grade;

        if (testscore >= 90) {
            grade = 'A';
        } else if (testscore >= 80) {
            grade = 'B';
        } else if (testscore >= 70) {
            grade = 'C';
        } else if (testscore >= 60) {
            grade = 'D';
        } else {
            grade = 'E';
        }
        System.out.printf("Grde = " + grade);
    }
} //  Grade = C
/**
 * значение testscore может удовлетворять более чем одному
 * выражению в составном операторе: 76 >= 70 и 76 >= 60.
 * Однако, как только условие выполнено, выполняются соответствующие
 * операторы (grade = 'C') и остальные условия не оцениваются
 */
